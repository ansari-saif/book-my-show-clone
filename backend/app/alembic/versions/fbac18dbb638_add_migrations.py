"""add migrations

Revision ID: fbac18dbb638
Revises: 0820708bc699
Create Date: 2024-09-29 03:43:58.711562

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fbac18dbb638'
down_revision = '0820708bc699'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cinemacategory',
    sa.Column('category_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('city',
    sa.Column('city_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('homepagedata',
    sa.Column('section_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('movie_ids', postgresql.ARRAY(sa.UUID()), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('movie',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('genre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('release_date', sa.DateTime(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('is_recommended', sa.Boolean(), nullable=False),
    sa.Column('you_might_also_like', postgresql.ARRAY(sa.UUID()), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cast',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role_in_movie', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('movie_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cinema',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('city_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crew',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('movie_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('movieformat',
    sa.Column('format', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('movie_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('movieimage',
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('image_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('movie_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('review',
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('review_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_top_review', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('movie_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('youmightalsolike',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('movie_id', sa.Uuid(), nullable=True),
    sa.Column('related_movie_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.ForeignKeyConstraint(['related_movie_id'], ['movie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('moviepricing',
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('movie_id', sa.Uuid(), nullable=False),
    sa.Column('cinema_id', sa.Uuid(), nullable=False),
    sa.Column('category_id', sa.Uuid(), nullable=False),
    sa.Column('format_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['cinemacategory.id'], ),
    sa.ForeignKeyConstraint(['cinema_id'], ['cinema.id'], ),
    sa.ForeignKeyConstraint(['format_id'], ['movieformat.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('screen',
    sa.Column('screen_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('cinema_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['cinema_id'], ['cinema.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('seat',
    sa.Column('seat_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('seat_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('screen_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['screen_id'], ['screen.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('show',
    sa.Column('show_time', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('movie_id', sa.Uuid(), nullable=False),
    sa.Column('screen_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.ForeignKeyConstraint(['screen_id'], ['screen.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('booking',
    sa.Column('booking_time', sa.DateTime(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('show_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['show_id'], ['show.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookingdetail',
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('booking_id', sa.Uuid(), nullable=False),
    sa.Column('seat_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.id'], ),
    sa.ForeignKeyConstraint(['seat_id'], ['seat.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payment_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('amount_paid', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('booking_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('item')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('item',
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name='item_owner_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='item_pkey')
    )
    op.drop_table('payment')
    op.drop_table('bookingdetail')
    op.drop_table('booking')
    op.drop_table('show')
    op.drop_table('seat')
    op.drop_table('screen')
    op.drop_table('moviepricing')
    op.drop_table('youmightalsolike')
    op.drop_table('review')
    op.drop_table('movieimage')
    op.drop_table('movieformat')
    op.drop_table('crew')
    op.drop_table('cinema')
    op.drop_table('cast')
    op.drop_table('movie')
    op.drop_table('homepagedata')
    op.drop_table('city')
    op.drop_table('cinemacategory')
    # ### end Alembic commands ###
